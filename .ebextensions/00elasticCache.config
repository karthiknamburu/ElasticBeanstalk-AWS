Resources:
  MyElastiCache:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      CacheNodeType: cache.t1.micro
      NumCacheNodes: 1
      Engine: memcached
      CacheSecurityGroupNames:
        - Ref: MyCacheSecurityGroup
  MyCacheSecurityGroup:
    Type: AWS::ElastiCache::SecurityGroup
    Properties:
      Description: "Lock cache down to webserver access only"
  MyCacheSecurityGroupIngress:
    Type: AWS::ElastiCache::SecurityGroupIngress
    Properties:
      CacheSecurityGroupName: 
        Ref: MyCacheSecurityGroup
      EC2SecurityGroupName:
        Ref: AWSEBSecurityGroup

files:
  "/tmp/elasticache.sh":
    mode: "000444"
    content: |
      ELASTICACHE_ENDPOINT="`{"Fn::GetAtt": ["MyElastiCache", "ConfigurationEndpoint.Address"]}`:`{"Fn::GetAtt": ["MyElastiCache", "ConfigurationEndpoint.Port"]}`"
  

option_settings:
  - option_name: EC_ENDPOINT
    value: [{"Fn::GetAtt": ["MyElastiCache", "ConfigurationEndpoint.Address"]}]
    

container_commands:
  initial_elasticache_load:
    command: ". /tmp/elasticache.sh"
  01_run:
    command:  export $(cat /tmp/elasticache.sh | xargs)
  02_run:
    command:  "export $(cat /tmp/elasticache.sh | xargs)"